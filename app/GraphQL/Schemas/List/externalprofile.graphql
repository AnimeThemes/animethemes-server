"Represents a user profile on the external site like MAL."
type ExternalProfile {
    "The primary key of the resource"
    id: Int! @rename(attribute: "profile_id")
    "The title of the profile"
    name: String!
    "The site the profile belongs to"
    site: ExternalProfileSite! @localizedEnum
    "The state of who can see the profile"
    visibility: ExternalProfileVisibility! @localizedEnum
    externalentries: [ExternalEntry] @hasMany
    user: User @belongsTo
    "The date that the resource was created"
    created_at: DateTimeTz
    "The date that the resource was last modified"
    updated_at: DateTimeTz
    "The date that the resource was deleted"
    deleted_at: DateTimeTz
}

extend type Query @middleware(class: "App\\Http\\Middleware\\Api\\EnabledOnlyOnLocalhost") {
    "Returns an external profile resource."
    externalprofile(
        id: String @bind(class: "App\\Models\\List\\ExternalProfile")
    ): Playlist @first
    @canModel(ability: "view", injectArgs: true)

    "Returns a listing of external profile resources."
    externalprofiles(
        name: String @eq
    ): [Playlist!]!
    @canModel(ability: "viewAny", injectArgs: true)
    @builder(method: "App\\GraphQL\\Builders\\List\\ExternalProfileBuilder@index")
    @paginate
}

extend type Mutation @guard @middleware(class: "App\\Http\\Middleware\\Api\\EnabledOnlyOnLocalhost") @feature(name: "App\\Features\\AllowExternalProfileManagement") {
    syncExternalProfile(
        id: Int! @bind(class: "App\\Models\\List\\ExternalProfile", column: "profile_id")
    ): MessageResponse!
    @canModel(ability: "update", injectArgs: true, model: "App\\Models\\List\\ExternalProfile")
    @field(resolver: "App\\GraphQL\\Mutations\\List\\ExternalProfileMutator@sync")
}