"""
Represents the composition that accompanies an AnimeTheme.

For example, Staple Stable is the song for the Bakemonogatari OP1 AnimeTheme.
"""
type Song {
    "The primary key of the resource"
    id: Int! @rename(attribute: "song_id")
    "The name of the composition"
    title: String
    animethemes: [AnimeTheme] @hasMany
    performances: [Performance] @hasMany
    resources: ExternalResourceConnection! @belongsToMany(type: CONNECTION)
    "The date that the resource was created"
    createdAt: DateTimeTz @rename(attribute: "created_at")
    "The date that the resource was last modified"
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    "The date that the resource was deleted"
    deletedAt: DateTimeTz @rename(attribute: "deleted_at")
}

"Default edge to use in simple belongs to many relationships"
type SongEdge {
    node: Song!
    "The date that the resource was last modified"
    createdAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
    "The date that the resource was deleted"
    updatedAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
}

enum SongColumnsOrderable {
    ID @enum(value: "song_id")
    TITLE
    CREATED_AT
    UPDATED_AT
    DELETED_AT
}

extend type Query {
    "Returns a listing of song resources given fields."
    songs(
        title: String @eq
        createdAt_lesser: DateTimeTz @where(key: "created_at", operator: "<")
        createdAt_greater: DateTimeTz @where(key: "created_at", operator: ">")
        updatedAt_lesser: DateTimeTz @where(key: "updated_at", operator: "<")
        updatedAt_greater: DateTimeTz @where(key: "updated_at", operator: ">")
        deletedAt_lesser: DateTimeTz @where(key: "deleted_at", operator: "<")
        deletedAt_greater: DateTimeTz @where(key: "deleted_at", operator: ">")
        orderBy: _ @orderBy(columnsEnum: "SongColumnsOrderable")
    ): [Song!]!
    @canModel(ability: "viewAny", injectArgs: true)
    @softDeletes
    @paginate
}