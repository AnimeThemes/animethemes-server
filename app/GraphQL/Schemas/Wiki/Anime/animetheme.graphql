"""
Represents an OP or ED sequence for an anime.

For example, the anime Bakemonogatari has five OP anime themes and one ED anime theme.
"""
type AnimeTheme {
    "The primary key of the resource"
    id: Int! @rename(attribute: "theme_id")
    "The type of the sequence"
    type: ThemeType! @localizedEnum
    "The numeric ordering of the theme"
    sequence: Int
    anime: Anime @belongsTo
    animethemeentries: [AnimeThemeEntry] @hasMany
    group: ThemeGroup @belongsTo
    song: Song @belongsTo
    "The date that the resource was created"
    createdAt: DateTimeTz @rename(attribute: "created_at")
    "The date that the resource was last modified"
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    "The date that the resource was deleted"
    deletedAt: DateTimeTz @rename(attribute: "deleted_at")
}

extend type Query {
    "Returns a listing of anime theme resources given fields."
    animethemes(
        type: [ThemeType] @in
        sequence_lesser: Int @comparison(key: "sequence", operator: "LT")
        sequence_greater: Int @comparison(key: "sequence", operator: "GT")
        createdAt_lesser: DateTimeTz @comparison(key: "created_at", operator: "LT", date: true)
        createdAt_greater: DateTimeTz @comparison(key: "created_at", operator: "GT", date: true)
        updatedAt_lesser: DateTimeTz @comparison(key: "updated_at", operator: "LT", date: true)
        updatedAt_greater: DateTimeTz @comparison(key: "updated_at", operator: "GT", date: true)
        deletedAt_lesser: DateTimeTz @comparison(key: "deleted_at", operator: "LT", date: true)
        deletedAt_greater: DateTimeTz @comparison(key: "deleted_at", operator: "GT", date: true)
    ): [AnimeTheme!]!
    @canModel(ability: "viewAny", injectArgs: true)
    @softDeletes
    @paginate
}