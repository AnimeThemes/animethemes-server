"""
Represents a version of an anime theme.

For example, the ED theme of the Bakemonogatari anime has three anime theme entries to represent three versions.
"""
type AnimeThemeEntry {
    "The primary key of the resource"
    id: Int! @rename(attribute: "entry_id")
    "The episodes that the theme is used for"
    episodes: String
    "Any additional information for this sequence"
    notes: String
    "Is not safe for work content included?"
    nsfw: Boolean!
    "Is content included that may spoil the viewer?"
    spoiler: Boolean!
    "The version number of the theme"
    version: Int
    animetheme: AnimeTheme @belongsTo
    videos: [Video] @belongsToMany(type: CONNECTION)
    "The date that the resource was created"
    createdAt: DateTimeTz @rename(attribute: "created_at")
    "The date that the resource was last modified"
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    "The date that the resource was deleted"
    deletedAt: DateTimeTz @rename(attribute: "deleted_at")
}

"Default edge to use in simple belongs to many relationships"
type AnimeThemeEntryEdge {
    node: AnimeThemeEntry!
    "The date that the resource was last modified"
    createdAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
    "The date that the resource was deleted"
    updatedAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
}

enum AnimeThemeEntryColumnsOrderable {
    ID @enum(value: "entry_id")
    EPISODES
    NOTES
    NSFW
    SPOILER
    VERSION
    CREATED_AT
    UPDATED_AT
    DELETED_AT
}

extend type Query {
    "Returns a listing of anime theme entry resources given fields."
    animethemeentries(
        isNsfw: Boolean @eq
        isSpoiler: Boolean @eq
        version_lesser: Int @where(key: "version", operator: "<")
        version_greater: Int @where(key: "version", operator: ">")
        createdAt_lesser: DateTimeTz @where(key: "created_at", operator: "<")
        createdAt_greater: DateTimeTz @where(key: "created_at", operator: ">")
        updatedAt_lesser: DateTimeTz @where(key: "updated_at", operator: "<")
        updatedAt_greater: DateTimeTz @where(key: "updated_at", operator: ">")
        deletedAt_lesser: DateTimeTz @where(key: "deleted_at", operator: "<")
        deletedAt_greater: DateTimeTz @where(key: "deleted_at", operator: ">")
        orderBy: _ @orderBy(columnsEnum: "AnimeThemeEntryColumnsOrderable")
    ): [AnimeThemeEntry!]!
    @canModel(ability: "viewAny", injectArgs: true)
    @softDeletes
    @paginate
}