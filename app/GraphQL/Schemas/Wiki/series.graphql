"""
Represents a collection of related anime.

For example, the Monogatari series is the collection of the Bakemonogatari anime and its related productions.
"""
type Series {
    "The primary key of the resource"
    id: Int! @rename(attribute: "series_id")
    "The primary title of the series"
    name: String!
    "The URL slug & route key of the resource"
    slug: String!
    anime: [Anime] @belongsToMany(type: CONNECTION)
    "The date that the resource was created"
    createdAt: DateTimeTz @rename(attribute: "created_at")
    "The date that the resource was last modified"
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    "The date that the resource was deleted"
    deletedAt: DateTimeTz @rename(attribute: "deleted_at")
}

"Default edge to use in simple belongs to many relationships"
type SeriesEdge {
    node: Series!
    "The date that the resource was last modified"
    createdAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
    "The date that the resource was deleted"
    updatedAt: DateTimeTz @field(resolver: "App\\GraphQL\\Resolvers\\PivotResolver@resolve")
}

enum SeriesColumnsOrderable {
    ID @enum(value: "series_id")
    NAME
    SLUG
    CREATED_AT
    UPDATED_AT
    DELETED_AT
}

extend type Query {
    "Returns a listing of series resources given fields."
    series(
        createdAt_lesser: DateTimeTz @where(key: "created_at", operator: "<")
        createdAt_greater: DateTimeTz @where(key: "created_at", operator: ">")
        updatedAt_lesser: DateTimeTz @where(key: "updated_at", operator: "<")
        updatedAt_greater: DateTimeTz @where(key: "updated_at", operator: ">")
        deletedAt_lesser: DateTimeTz @where(key: "deleted_at", operator: "<")
        deletedAt_greater: DateTimeTz @where(key: "deleted_at", operator: ">")
        orderBy: _ @orderBy(columnsEnum: "SeriesColumnsOrderable")
    ): [Series!]!
    @canModel(ability: "viewAny", injectArgs: true)
    @softDeletes
    @paginate
}